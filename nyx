#!/usr/bin/ruby

# encoding: UTF-8

require_relative "Libs/loader.rb"

# ----------------------------------------------------------------------------

if ARGV[0] == "stack" and ARGV[1] then
    id = ARGV[1]
    if !Space::idIsUsed(id) then
        puts "error: the provided id '#{id}' is not used"
        exit
    end
    puts "stacking '#{Space::idToNxPointOrNull(id).description()}'"
    IdStack::stack(id)
    exit
end

if ARGV[0] == "unstack" then
    IdStack::unStackOrNull()
    exit
end

loop {
    system("clear")

    nxPoints = IdStack::getIds().map{|id| Space::idToNxPointOrNull(id) }.compact
    nxPoints.each{|nxpoint|
        puts nxpoint.toString().yellow
    }
    puts ""

    puts "-- Nyx ðŸ—º -----------------------------"

    ops = [
        "Search",
        "NxPoints Listing",
        "Make new NxPod",
    ]
    operation = LucilleCore::selectEntityFromListOfEntitiesOrNull("operation", ops)
    break if operation.nil?
    if operation == "Search" then
        Space::generalSearchLoop()
    end
    if operation == "NxPoints Listing" then
        loop {
            nxpoint = LucilleCore::selectEntityFromListOfEntitiesOrNull("NxPoint", Space::getNxPoints(), lambda{|e| e.toString() })
            break if nxpoint.nil?
            Space::landing(nxpoint)
        }
    end
    if operation == "Make new NxPod" then
        nxpod = NxPods::interactivelyIssueNewNxPodOrNull()
        next if nxpod.nil?
        Space::landing(nxpod)
    end
}
