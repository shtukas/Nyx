#!/usr/bin/ruby

# encoding: UTF-8

require_relative "Libs/loader.rb"

# ----------------------------------------------------------------------------

def insertQuarkLine(ordinal, line)
    nereiduuid = SecureRandom.hex
    NereidInterface::insertElementComponents(nereiduuid, Time.new.to_i, line, "Line", "")

    quark = {
        "uuid"       => SecureRandom.hex,
        "nyxNxSet"   => "d65674c7-c8c4-4ed4-9de9-7c600b43eaab",
        "unixtime"   => Time.new.to_i,
        "nereiduuid" => nereiduuid
    }
    TodoCoreData::put(quark)

    QuarksOrdinals::setQuarkOrdinal(quark, ordinal)
end

if ARGV.empty? then
    puts "usage:"
    puts "catalyst no-work-today"
    puts "catalyst make quark line <ordinal> <line>"
    exit
end

if ARGV[0] == "no-work-today" then
    KeyValueStore::setFlagTrue(nil, "a2f220ce-e020-46d9-ba64-3938ca3b69d4:#{CatalystUtils::today()}")
    exit
end

if ARGV[0] == "make" and ARGV[1] == "quark" and ARGV[2] == "line" and ARGV[3] and ARGV[4] then
    ordinal = ARGV[3].to_f
    line    = ARGV[4]
    insertQuarkLine(ordinal, line)
end
